// VoltageOS soong configs

bootstrap_go_package {
    name: "soong-voltage-generator",
    pkgPath: "voltage/soong/generator",
    deps: [
        "blueprint",
        "blueprint-pathtools",
        "soong",
        "soong-android",
        "soong-shared",
    ],
    srcs: [
        "generator/generator.go",
        "generator/variables.go",
    ],
    pluginFor: ["soong_build"],
}

voltage_generator {
    name: "generated_kernel_includes",

    // The headers make command
    cmd: "$(PATH_OVERRIDE_SOONG) $(KERNEL_MAKE_CMD) $(KERNEL_MAKE_FLAGS) -C $(TARGET_KERNEL_SOURCE) O=$(KERNEL_BUILD_OUT_PREFIX)$(genDir) ARCH=$(KERNEL_ARCH) $(KERNEL_CROSS_COMPILE) headers_install && vendor/voltage/tools/clean_headers.sh $(KERNEL_BUILD_OUT_PREFIX)$(genDir)",

    // Directories that can be imported by a cc_* module generated_headers property
    export_include_dirs: [
        "usr/audio/include/uapi",
        "usr/include",
        "usr/include/audio",
        "usr/include/audio/include/uapi",
        "usr/techpack/audio/include",
    ],

    // Sources for dependency tracking
    dep_root: "$(TARGET_KERNEL_SOURCE)",
    dep_files: [
        "Makefile",
        "include/**/*",
        "arch/$(KERNEL_ARCH)/include/**/*",
        "techpack/audio/include/**/*",
    ],
}

bootstrap_go_package {
    name: "soong-voltage-mkdir",
    pkgPath: "voltage/soong/mkdir",
    deps: [
        "blueprint",
        "blueprint-pathtools",
        "soong",
        "soong-android",
    ],
    srcs: [
        "mkdir/init.go",
        "mkdir/mkdir.go",
    ],
    pluginFor: ["soong_build"],
}

cc_defaults {
    name: "generated_kernel_header_defaults",
    generated_headers: ["generated_kernel_includes"],
    export_generated_headers: ["generated_kernel_includes"],
    vendor_available: true,
    recovery_available: true,
}

cc_library_headers {
    name: "generated_kernel_headers",
    defaults: ["generated_kernel_header_defaults"],
}

cc_library_headers {
    name: "qti_kernel_headers",
    defaults: ["generated_kernel_header_defaults"],
}

// Target platform agnostic config modules
soong_config_module_type {
    name: "camera_needs_client_info_lib",
    module_type: "cc_defaults",
    config_namespace: "voltageGlobalVars",
    bool_variables: ["camera_needs_client_info_lib"],
    properties: [
        "cppflags",
        "shared_libs",
    ],
}

camera_needs_client_info_lib {
    name: "camera_needs_client_info_lib_defaults",
    soong_config_variables: {
        camera_needs_client_info_lib: {
            cppflags: ["-DCAMERA_NEEDS_CLIENT_INFO_LIB"],
            shared_libs: ["//hardware/oneplus:vendor.oneplus.hardware.camera@1.0"],
        },
    },
}

soong_config_module_type {
    name: "camera_needs_client_info_lib_oplus",
    module_type: "cc_defaults",
    config_namespace: "voltageGlobalVars",
    bool_variables: ["camera_needs_client_info_lib_oplus"],
    properties: [
        "cppflags",
        "shared_libs",
    ],
}

camera_needs_client_info_lib_oplus {
    name: "camera_needs_client_info_lib_oplus_defaults",
    soong_config_variables: {
        camera_needs_client_info_lib_oplus: {
            cppflags: ["-DCAMERA_NEEDS_CLIENT_INFO_LIB_OPLUS"],
            shared_libs: ["vendor.oplus.hardware.cameraMDM@2.0"],
        },
    },
}

soong_config_module_type {
    name: "gralloc_10_usage_bits",
    module_type: "cc_defaults",
    config_namespace: "voltageGlobalVars",
    value_variables: ["additional_gralloc_10_usage_bits"],
    properties: ["cppflags"],
}

gralloc_10_usage_bits {
    name: "gralloc_10_usage_bits_defaults",
    soong_config_variables: {
        additional_gralloc_10_usage_bits: {
            cppflags: ["-DADDNL_GRALLOC_10_USAGE_BITS=%s"],
        },
    },
}

soong_config_module_type {
    name: "target_alternative_futex_waiters",
    module_type: "cc_defaults",
    config_namespace: "voltageGlobalVars",
    bool_variables: ["target_alternative_futex_waiters"],
    properties: [
        "cflags",
        "cppflags",
    ],
}

target_alternative_futex_waiters {
    name: "target_alternative_futex_waiters_defaults",
    soong_config_variables: {
        target_alternative_futex_waiters: {
            cflags: ["-DTARGET_ALTERNATIVE_FUTEX_WAITERS"],
            cppflags: ["-DTARGET_ALTERNATIVE_FUTEX_WAITERS"],
        },
    },
}

soong_config_module_type {
    name: "target_shim_libs",
    module_type: "cc_defaults",
    config_namespace: "voltageGlobalVars",
    value_variables: ["target_ld_shim_libs"],
    properties: ["cppflags"],
}

target_shim_libs {
    name: "shim_libs_defaults",
    soong_config_variables: {
        target_ld_shim_libs: {
            cppflags: ["-DLD_SHIM_LIBS=\"%s\""],
        },
    },
}

soong_config_module_type {
    name: "bootloader_message_offset",
    module_type: "cc_defaults",
    config_namespace: "voltageGlobalVars",
    value_variables: ["bootloader_message_offset"],
    properties: [
        "cflags",
        "export_cflags",
    ],
}

bootloader_message_offset {
    name: "bootloader_message_offset_defaults",
    soong_config_variables: {
        bootloader_message_offset: {
            cflags: ["-DBOARD_RECOVERY_BLDRMSG_OFFSET=%s"],
            export_cflags: ["-DBOARD_RECOVERY_BLDRMSG_OFFSET=%s"],
        },
    },
}

soong_config_module_type {
    name: "needs_netd_direct_connect_rule",
    module_type: "cc_defaults",
    config_namespace: "voltageGlobalVars",
    bool_variables: ["needs_netd_direct_connect_rule"],
    properties: ["cppflags"],
}

needs_netd_direct_connect_rule {
    name: "needs_netd_direct_connect_rule_defaults",
    soong_config_variables: {
        needs_netd_direct_connect_rule: {
            cppflags: ["-DNEEDS_NETD_DIRECT_CONNECT_RULE"],
        },
    },
}

soong_config_module_type {
    name: "uses_legacy_fd_fbdev",
    module_type: "cc_defaults",
    config_namespace: "customGlobalVars",
    bool_variables: ["uses_legacy_fd_fbdev"],
    properties: ["cppflags"],
}

uses_legacy_fd_fbdev {
    name: "uses_legacy_fd_fbdev_defaults",
    soong_config_variables: {
        uses_legacy_fd_fbdev: {
            cppflags: ["-DUSES_LEGACY_FD_FBDEV"],
        },
    },
}

soong_config_module_type {
    name: "target_camera_package_name",
    module_type: "cc_defaults",
    config_namespace: "voltageGlobalVars",
    value_variables: ["target_camera_package_name"],
    properties: ["cppflags"],
}

target_camera_package_name {
    name: "camera_package_name_defaults",
    soong_config_variables: {
        target_camera_package_name: {
            cppflags: ["-DCAMERA_PACKAGE_NAME=\"%s\""],
        },
    },
}

// NVIDIA specific config modules
soong_config_module_type {
    name: "nvidia_enhancements",
    module_type: "cc_defaults",
    config_namespace: "voltageNvidiaVars",
    bool_variables: ["uses_nvidia_enhancements"],
    properties: ["cppflags"],
}

nvidia_enhancements {
    name: "nvidia_enhancements_defaults",
    soong_config_variables: {
        uses_nvidia_enhancements: {
            cppflags: ["-DNV_ANDROID_FRAMEWORK_ENHANCEMENTS"],
        },
    },
}

soong_config_module_type {
    name: "disable_bluetooth_le_read_buffer_size_v2",
    module_type: "cc_defaults",
    config_namespace: "customGlobalVars",
    bool_variables: ["disable_bluetooth_le_read_buffer_size_v2"],
    properties: ["cppflags"],
}

disable_bluetooth_le_read_buffer_size_v2 {
    name: "disable_bluetooth_le_read_buffer_size_v2_defaults",
    soong_config_variables: {
        disable_bluetooth_le_read_buffer_size_v2: {
            cppflags: ["-DDISABLE_LE_READ_BUFFER_SIZE_V2"],
        },
    },
}

soong_config_module_type {
    name: "disable_bluetooth_le_set_host_feature",
    module_type: "cc_defaults",
    config_namespace: "customGlobalVars",
    bool_variables: ["disable_bluetooth_le_set_host_feature"],
    properties: ["cppflags"],
}

disable_bluetooth_le_set_host_feature {
    name: "disable_bluetooth_le_set_host_feature_defaults",
    soong_config_variables: {
        disable_bluetooth_le_set_host_feature: {
            cppflags: ["-DDISABLE_LE_SET_HOST_FEATURE"],
        },
    },
}

soong_config_module_type {
    name: "uses_oplus_touch",
    module_type: "cc_defaults",
    config_namespace: "voltageGlobalVars",
    bool_variables: ["uses_oplus_touch"],
    properties: ["cppflags"],
}

uses_oplus_touch {
    name: "uses_oplus_touch_defaults",
    soong_config_variables: {
        uses_oplus_touch: {
            cppflags: ["-DUSES_OPLUS_TOUCH"],
        },
    },
}
